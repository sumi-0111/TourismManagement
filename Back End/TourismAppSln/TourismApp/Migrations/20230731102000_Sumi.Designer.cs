// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TourismApp.Models;

#nullable disable

namespace TourismApp.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20230731102000_Sumi")]
    partial class Sumi
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TourismApp.Models.TravelAgent", b =>
                {
                    b.Property<int>("TravelAgentId")
                        .HasColumnType("int");

                    b.Property<string>("CompanyAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TravelAgentEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TravelAgentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TravelAgentPhoneNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TravelAgentStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TravelAgentId");

                    b.ToTable("TravelAgents");
                });

            modelBuilder.Entity("TourismApp.Models.Traveller", b =>
                {
                    b.Property<int>("TravellerId")
                        .HasColumnType("int");

                    b.Property<string>("TravellerAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TravellerAge")
                        .HasColumnType("int");

                    b.Property<string>("TravellerEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TravellerGender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TravellerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TravellerPhoneNo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TravellerId");

                    b.ToTable("Travellers");
                });

            modelBuilder.Entity("TourismApp.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordKey")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TourismApp.Models.TravelAgent", b =>
                {
                    b.HasOne("TourismApp.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("TravelAgentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TourismApp.Models.Traveller", b =>
                {
                    b.HasOne("TourismApp.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("TravellerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
